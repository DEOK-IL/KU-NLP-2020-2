# -*- coding: utf-8 -*-
"""테스트 데이터_model_kor_koelectra_v3_base.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K6ikPpiHgpLax0Z-fz8xVPM8VtzcRm-m

# **Test Data & Model Load**

테스트 데이터 로드
- 리더보드의 테스트 파일 (ko_data.csv)을 불러옴 (사전에 개인 Git에 올려둔 ko_data.csv를 불러옴)
- Private data로 검증 시에는 별도 파일 import 과정 필요
"""

# 트랜스포머 설치 및 검증 데이터셋 다운로드
!pip install -q transformers

# kaggle competition data 다운로드
!wget https://raw.githubusercontent.com/DEOK-IL/KU-NLP-2020-2/master/ko_data.csv

# 라이브러리 임포트
import pandas as pd
import torch
from torch.nn import functional as F
from torch.utils.data import DataLoader, Dataset
from transformers import AutoTokenizer, ElectraForSequenceClassification, AdamW
from tqdm.notebook import tqdm

# GPU 사용
device = torch.device("cuda")

# 데이터 전처리 클래스
class NSMCDataset(Dataset):
  
  def __init__(self, csv_file):
    # 일부 값중에 NaN이 있음...
    self.dataset = pd.read_csv(csv_file, encoding='cp949', sep='\t').dropna(axis=0) 
    # 중복제거
    self.tokenizer = AutoTokenizer.from_pretrained("monologg/koelectra-base-v3-discriminator")
    print(self.dataset.describe())
  
  def __len__(self):
    return len(self.dataset)
  
  def __getitem__(self, idx):
    row = self.dataset.iloc[idx, 0:2].values
    text = row[0]

    inputs = self.tokenizer(
        text, 
        return_tensors='pt',
        truncation=True,
        max_length=256,
        pad_to_max_length=True,
        add_special_tokens=True
        )
    
    input_ids = inputs['input_ids'][0]
    attention_mask = inputs['attention_mask'][0]

    return input_ids, attention_mask

test_data = 'ko_data.csv'

#평가 데이터 전처리 입력
test_dataset = NSMCDataset(test_data) # 프라이빗 데이터 사용 시 사용하고자 하는 파일명으로 대체 필요함
test_loader = DataLoader(test_dataset)

#미리 학습해둔 모델 다운로드
!wget https://www.dropbox.com/s/jhsv6e526a14kev/model_kor_koelectra_v3_base.pt?dl=0

#모델 로드
model = ElectraForSequenceClassification.from_pretrained("monologg/koelectra-base-v3-discriminator").to(device)
model.load_state_dict(torch.load("model_kor_koelectra_v3_base.pt?dl=0"))

"""# **Validation**"""

from collections import OrderedDict
model.eval()
idx = 0
sentence_dict = dict()

for input_ids_batch, attention_masks_batch in tqdm(test_loader):
  y_pred = model(input_ids_batch.to(device), attention_mask=attention_masks_batch.to(device))[0]
  _, predicted = torch.max(y_pred, 1)
  pred_emotion = predicted.tolist()[0]
  sentence_dict[idx] = pred_emotion
  idx += 1

"""# **Csv export**"""

#pandas dataframe으로 변환
print(sentence_dict)
df = pd.DataFrame(list(sentence_dict.items()), columns=['Id', 'Predicted'])
print(df)

#예측 결과를 sample.csv 파일로 저장
df.to_csv('2019516021_이덕일_sample.csv', index=False)

#파일 다운로드
from google.colab import files
files.download('2019516021_이덕일_sample.csv')